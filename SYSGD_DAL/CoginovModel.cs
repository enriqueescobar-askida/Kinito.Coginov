//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_AgentSalarie", "Agent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Agent), "Salaries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.Salarie), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_ContactFicheContact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Contact), "FicheContacts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheContact), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_EmployeurEmployeurSyndicat", "Employeur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Employeur), "EmployeurSyndicats", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.EmployeurSyndicat), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_EmployeurFicheEmployeur", "Employeur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Employeur), "FicheEmployeurs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_EmployeurSalarie", "Employeur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Employeur), "Salaries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.Salarie), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_SyndicatEmployeurSyndicat", "Syndicats", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Syndicat), "EmployeurSyndicats", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.EmployeurSyndicat), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_SalarieEpisode", "Salarie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Salarie), "Episodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.Episode), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_SalarieFicheSalarie", "Salarie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Salarie), "FicheSalaries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheSalarie), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_SyndicatFicheSalarie", "Syndicats", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Syndicat), "FicheSalaries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheSalarie), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "TelephoneFicheSalarie", "Telephone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Telephone), "FicheSalarie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheSalarie), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "TelephoneFicheSalarie1", "Telephone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Telephone), "FicheSalarie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheSalarie), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "TelephoneFicheContact", "Telephone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Telephone), "FicheContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheContact), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "TelephoneFicheContact1", "Telephone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Telephone), "FicheContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheContact), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "TypeRMPFicheEmployeur", "TypeRMP", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.TypeRMP), "FicheEmployeur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "PeriodeReferenceFicheEmployeur", "PeriodeReference", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.PeriodeReference), "FicheEmployeur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "PeriodePaieFicheEmployeur", "PeriodePaie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.PeriodePaie), "FicheEmployeur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "NatureEntrepriseFicheEmployeur", "NatureEntreprise", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.NatureEntreprise), "FicheEmployeur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "LangueFicheEmployeur", "Langue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Langue), "FicheEmployeur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "AssociationPatronaleFicheEmployeur", "AssociationPatronale", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.AssociationPatronale), "FicheEmployeur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "SemainePaieFicheEmployeur", "SemainePaie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.SemainePaie), "FicheEmployeur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheEmployeur), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "SexeFicheSalarie", "Sexe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Sexe), "FicheSalarie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.FicheSalarie), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_Affectation_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Contact), "Affectation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.Affectation), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_Affectation_Employeur", "Employeur", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Employeur), "Affectation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.Affectation), true)]
[assembly: EdmRelationshipAttribute("SYSGDIIModel", "FK_Affectation_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SYSGD_DAL.Role), "Affectation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SYSGD_DAL.Affectation), true)]

#endregion

namespace SYSGD_DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SYSGDIIEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SYSGDIIEntities object using the connection string found in the 'SYSGDIIEntities' section of the application configuration file.
        /// </summary>
        public SYSGDIIEntities() : base("name=SYSGDIIEntities", "SYSGDIIEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SYSGDIIEntities object.
        /// </summary>
        public SYSGDIIEntities(string connectionString) : base(connectionString, "SYSGDIIEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SYSGDIIEntities object.
        /// </summary>
        public SYSGDIIEntities(EntityConnection connection) : base(connection, "SYSGDIIEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Agent> AgentSet
        {
            get
            {
                if ((_AgentSet == null))
                {
                    _AgentSet = base.CreateObjectSet<Agent>("AgentSet");
                }
                return _AgentSet;
            }
        }
        private ObjectSet<Agent> _AgentSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssociationPatronales> AssociationPatronales
        {
            get
            {
                if ((_AssociationPatronales == null))
                {
                    _AssociationPatronales = base.CreateObjectSet<AssociationPatronales>("AssociationPatronales");
                }
                return _AssociationPatronales;
            }
        }
        private ObjectSet<AssociationPatronales> _AssociationPatronales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> ContactSet
        {
            get
            {
                if ((_ContactSet == null))
                {
                    _ContactSet = base.CreateObjectSet<Contact>("ContactSet");
                }
                return _ContactSet;
            }
        }
        private ObjectSet<Contact> _ContactSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employeur> EmployeurSet
        {
            get
            {
                if ((_EmployeurSet == null))
                {
                    _EmployeurSet = base.CreateObjectSet<Employeur>("EmployeurSet");
                }
                return _EmployeurSet;
            }
        }
        private ObjectSet<Employeur> _EmployeurSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeurSyndicat> EmployeurSyndicatSet
        {
            get
            {
                if ((_EmployeurSyndicatSet == null))
                {
                    _EmployeurSyndicatSet = base.CreateObjectSet<EmployeurSyndicat>("EmployeurSyndicatSet");
                }
                return _EmployeurSyndicatSet;
            }
        }
        private ObjectSet<EmployeurSyndicat> _EmployeurSyndicatSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Episode> EpisodeSet
        {
            get
            {
                if ((_EpisodeSet == null))
                {
                    _EpisodeSet = base.CreateObjectSet<Episode>("EpisodeSet");
                }
                return _EpisodeSet;
            }
        }
        private ObjectSet<Episode> _EpisodeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FicheContact> FicheContactSet
        {
            get
            {
                if ((_FicheContactSet == null))
                {
                    _FicheContactSet = base.CreateObjectSet<FicheContact>("FicheContactSet");
                }
                return _FicheContactSet;
            }
        }
        private ObjectSet<FicheContact> _FicheContactSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FicheEmployeur> FicheEmployeurSet
        {
            get
            {
                if ((_FicheEmployeurSet == null))
                {
                    _FicheEmployeurSet = base.CreateObjectSet<FicheEmployeur>("FicheEmployeurSet");
                }
                return _FicheEmployeurSet;
            }
        }
        private ObjectSet<FicheEmployeur> _FicheEmployeurSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FicheSalarie> FicheSalarieSet
        {
            get
            {
                if ((_FicheSalarieSet == null))
                {
                    _FicheSalarieSet = base.CreateObjectSet<FicheSalarie>("FicheSalarieSet");
                }
                return _FicheSalarieSet;
            }
        }
        private ObjectSet<FicheSalarie> _FicheSalarieSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Langues> Langues
        {
            get
            {
                if ((_Langues == null))
                {
                    _Langues = base.CreateObjectSet<Langues>("Langues");
                }
                return _Langues;
            }
        }
        private ObjectSet<Langues> _Langues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NatureEntreprises> NatureEntreprises
        {
            get
            {
                if ((_NatureEntreprises == null))
                {
                    _NatureEntreprises = base.CreateObjectSet<NatureEntreprises>("NatureEntreprises");
                }
                return _NatureEntreprises;
            }
        }
        private ObjectSet<NatureEntreprises> _NatureEntreprises;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PeriodePaies> PeriodePaies
        {
            get
            {
                if ((_PeriodePaies == null))
                {
                    _PeriodePaies = base.CreateObjectSet<PeriodePaies>("PeriodePaies");
                }
                return _PeriodePaies;
            }
        }
        private ObjectSet<PeriodePaies> _PeriodePaies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PeriodeReferences> PeriodeReferences
        {
            get
            {
                if ((_PeriodeReferences == null))
                {
                    _PeriodeReferences = base.CreateObjectSet<PeriodeReferences>("PeriodeReferences");
                }
                return _PeriodeReferences;
            }
        }
        private ObjectSet<PeriodeReferences> _PeriodeReferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pilotage> PilotageSet
        {
            get
            {
                if ((_PilotageSet == null))
                {
                    _PilotageSet = base.CreateObjectSet<Pilotage>("PilotageSet");
                }
                return _PilotageSet;
            }
        }
        private ObjectSet<Pilotage> _PilotageSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Salarie> SalarieSet
        {
            get
            {
                if ((_SalarieSet == null))
                {
                    _SalarieSet = base.CreateObjectSet<Salarie>("SalarieSet");
                }
                return _SalarieSet;
            }
        }
        private ObjectSet<Salarie> _SalarieSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SemainePaies> SemainePaies
        {
            get
            {
                if ((_SemainePaies == null))
                {
                    _SemainePaies = base.CreateObjectSet<SemainePaies>("SemainePaies");
                }
                return _SemainePaies;
            }
        }
        private ObjectSet<SemainePaies> _SemainePaies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sexes> Sexes
        {
            get
            {
                if ((_Sexes == null))
                {
                    _Sexes = base.CreateObjectSet<Sexes>("Sexes");
                }
                return _Sexes;
            }
        }
        private ObjectSet<Sexes> _Sexes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Syndicat> SyndicatSet
        {
            get
            {
                if ((_SyndicatSet == null))
                {
                    _SyndicatSet = base.CreateObjectSet<Syndicat>("SyndicatSet");
                }
                return _SyndicatSet;
            }
        }
        private ObjectSet<Syndicat> _SyndicatSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeRMPs> TypeRMPs
        {
            get
            {
                if ((_TypeRMPs == null))
                {
                    _TypeRMPs = base.CreateObjectSet<TypeRMPs>("TypeRMPs");
                }
                return _TypeRMPs;
            }
        }
        private ObjectSet<TypeRMPs> _TypeRMPs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeTelephones> TypeTelephones
        {
            get
            {
                if ((_TypeTelephones == null))
                {
                    _TypeTelephones = base.CreateObjectSet<TypeTelephones>("TypeTelephones");
                }
                return _TypeTelephones;
            }
        }
        private ObjectSet<TypeTelephones> _TypeTelephones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Versions> Versions
        {
            get
            {
                if ((_Versions == null))
                {
                    _Versions = base.CreateObjectSet<Versions>("Versions");
                }
                return _Versions;
            }
        }
        private ObjectSet<Versions> _Versions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Affectation> Affectation
        {
            get
            {
                if ((_Affectation == null))
                {
                    _Affectation = base.CreateObjectSet<Affectation>("Affectation");
                }
                return _Affectation;
            }
        }
        private ObjectSet<Affectation> _Affectation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AgentSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgentSet(Agent agent)
        {
            base.AddObject("AgentSet", agent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssociationPatronales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssociationPatronales(AssociationPatronales associationPatronales)
        {
            base.AddObject("AssociationPatronales", associationPatronales);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactSet(Contact contact)
        {
            base.AddObject("ContactSet", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeurSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeurSet(Employeur employeur)
        {
            base.AddObject("EmployeurSet", employeur);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeurSyndicatSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeurSyndicatSet(EmployeurSyndicat employeurSyndicat)
        {
            base.AddObject("EmployeurSyndicatSet", employeurSyndicat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EpisodeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEpisodeSet(Episode episode)
        {
            base.AddObject("EpisodeSet", episode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FicheContactSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFicheContactSet(FicheContact ficheContact)
        {
            base.AddObject("FicheContactSet", ficheContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FicheEmployeurSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFicheEmployeurSet(FicheEmployeur ficheEmployeur)
        {
            base.AddObject("FicheEmployeurSet", ficheEmployeur);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FicheSalarieSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFicheSalarieSet(FicheSalarie ficheSalarie)
        {
            base.AddObject("FicheSalarieSet", ficheSalarie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Langues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLangues(Langues langues)
        {
            base.AddObject("Langues", langues);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NatureEntreprises EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNatureEntreprises(NatureEntreprises natureEntreprises)
        {
            base.AddObject("NatureEntreprises", natureEntreprises);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PeriodePaies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriodePaies(PeriodePaies periodePaies)
        {
            base.AddObject("PeriodePaies", periodePaies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PeriodeReferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeriodeReferences(PeriodeReferences periodeReferences)
        {
            base.AddObject("PeriodeReferences", periodeReferences);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PilotageSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPilotageSet(Pilotage pilotage)
        {
            base.AddObject("PilotageSet", pilotage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalarieSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalarieSet(Salarie salarie)
        {
            base.AddObject("SalarieSet", salarie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SemainePaies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSemainePaies(SemainePaies semainePaies)
        {
            base.AddObject("SemainePaies", semainePaies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sexes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSexes(Sexes sexes)
        {
            base.AddObject("Sexes", sexes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SyndicatSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSyndicatSet(Syndicat syndicat)
        {
            base.AddObject("SyndicatSet", syndicat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeRMPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeRMPs(TypeRMPs typeRMPs)
        {
            base.AddObject("TypeRMPs", typeRMPs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeTelephones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeTelephones(TypeTelephones typeTelephones)
        {
            base.AddObject("TypeTelephones", typeTelephones);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Versions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVersions(Versions versions)
        {
            base.AddObject("Versions", versions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Affectation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAffectation(Affectation affectation)
        {
            base.AddObject("Affectation", affectation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities

    #endregion
    
}
