<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--www.dnn.fr   Last change local time: 29/07/2011 12:17:14   UTC: 2011-07-29 10:17:14Z 
Copyright 2004-2011 David Thomas (Imatech) and Benoit Sarton (BSI)
Cette mention doit figurer dans tout fichier dérivé. Voir la mention légale complète en bas du fichier.
See full terms and conditions at the bottom of this file.-->
  <data name="ModuleHelp.Text">
    <value></value>
  </data>
  <data name="ControlTitle_packagewriter.Text">
    <value>Créer un package</value>
  </data>
  <data name="Introduction.Help">
    <value>Cet assistant vous permet de créer un package contenant les fichiers nécessaires à son installation du DotNetNuke</value>
  </data>
  <data name="Introduction.Title">
    <value>Créer le package</value>
  </data>
  <data name="plBasePath.Help">
    <value>Dossier où se trouvent les fichiers du package</value>
  </data>
  <data name="plBasePath.Text">
    <value>Dossier</value>
  </data>
  <data name="plBinFolder.Help">
    <value>Dossier où se trouvent les éléments de package</value>
  </data>
  <data name="plBinFolder.Text">
    <value>Dossier des éléments</value>
  </data>
  <data name="Cancel.Text">
    <value>Retour</value>
  </data>
  <data name="ChooseFiles.Help">
    <value>A cette étape, vous pouvez choisir les éléments à inclure dans votre package. S'il existe un fichier de projet dans le dossier du paquet, l'assistant tentera de déterminer les éléments à inclure, mais vous pouvez ajouter ou supprimer des éléments de la liste.</value>
  </data>
  <data name="ChooseFiles.Title">
    <value>Fichiers à inclure</value>
  </data>
  <data name="cmdGetFiles.Text">
    <value>Rafraichir la liste des fichiers</value>
  </data>
  <data name="chkIncludeSource.Text">
    <value>Inclure la source :</value>
  </data>
  <data name="ChooseAssemblies.Help">
    <value>A cette étape, vous pouvez ajouter les éléments à inclure dans votre package. S'il existe un fichier de projet dans le dossier du paquet, l'assistant tentera de déterminer les éléments à inclure, mais vous pouvez ajouter ou supprimer des éléments de la liste.</value>
  </data>
  <data name="ChooseAssemblies.Title">
    <value>Choisir les éléments à inclure</value>
  </data>
  <data name="cmdGetAssemblies.Text">
    <value>Rafraichir la liste</value>
  </data>
  <data name="Complete.Text">
    <value>Package complet (zip):</value>
  </data>
  <data name="FinalStep.Help">
    <value>La dernière étape consiste à créer le package.  Pour créer une copie du fichier manifeste, cochez la case "Créer un fichier manifeste"-, le fichier sera créé dans dossier.  Indépendamment de la valeur que vous utilisez ici le manifeste est enregistré dans la base de données, et il sera ajouté au package.&lt;br&gt;&lt;br&gt;  Pour créer un package Cochez la case "Créer un package". Le package sera créé dans les dossier de l’hôte.</value>
  </data>
  <data name="FinalStep.Title">
    <value>Créer le package</value>
  </data>
  <data name="Manifest.Text">
    <value>Manifeste seul (dnn):</value>
  </data>
  <data name="plManifestName.Help">
    <value>Entrez le nom de fichier à utiliser pour le manifeste.</value>
  </data>
  <data name="plManifestName.Text">
    <value>Nom du manifeste :</value>
  </data>
  <data name="LogTitle.Text">
    <value>Logs de la création du package</value>
  </data>
  <data name="plArchiveName.Help">
    <value>Entrez le nom du fichier à utiliser  (zip).</value>
  </data>
  <data name="plArchiveName.Text">
    <value>Nom du fichier :</value>
  </data>
  <data name="WriterResults.Help">
    <value>Le résultat de la création du package est présenté ci-dessous.</value>
  </data>
  <data name="WriterResults.Title">
    <value>Résultat de la création du package</value>
  </data>
  <data name="CreateManifest.Help">
    <value>En fonction de vos sélections, l'assistant a créé le manifeste pour le package.  Le manifeste est affiché dans la zone de texte ci-dessous.  Vous pouvez modifier le manifeste, avant la création du package.</value>
  </data>
  <data name="CreateManifest.Title">
    <value>Créer un manifeste</value>
  </data>
  <data name="plManifest.Help">
    <value>Cochez cette case pour créer un manifeste.</value>
  </data>
  <data name="plManifest.Text">
    <value>Créer le manifeste :</value>
  </data>
  <data name="plPackage.Help">
    <value>Cochez cette case pour créer un package (zip)</value>
  </data>
  <data name="plPackage.Text">
    <value>Créer le packqge :</value>
  </data>
  <data name="plReviewManifest.Help">
    <value>Cochez cette case pour examiner le manifeste avant de créer le nouveau package.</value>
  </data>
  <data name="plReviewManifest.Text">
    <value>Examiner le manifeste :</value>
  </data>
  <data name="plUseManifest.Help">
    <value>hez cette case pour utiliser un manifeste existant pour le package.</value>
  </data>
  <data name="plUseManifest.Text">
    <value>Utiliser le manifeste :</value>
  </data>
  <data name="plChooseManifest.Help">
    <value>Choisissez le manifeste précédemment créé à utiliser</value>
  </data>
  <data name="plChooseManifest.Text">
    <value>Manifeste existant :</value>
  </data>
  <data name="NoFileName.Text">
    <value>Vous devez fournir un nom pour le package.</value>
  </data>
  <data name="ManifestHelp.Text">
    <value>&lt;p&gt;Cet assistant va créer un manifeste pour votre extension.  Vous aurez un certain nombre d'options à choisir. Si vous avez déjà créé un manifeste (soit en exécutant cet assistant ou en le créant manuellement), vous pouvez le sélectionner et l’utiliser en cochant "Utiliser le manifeste existant" et en le choisissant dans la liste déroulante es fichiers que le système aura trouvé pour cette extension.&lt;/p&gt;
&lt;p&gt;En outre, vous pouvez choisir de consulter le manifeste à la dernière étape de l'assistant - au cas où vous souhaitez apporter des modifications mineurs sur le manifeste avant que le package soit créé.&lt;/p&gt;</value>
  </data>
  <data name="InvalidPackageName.Text">
    <value>Extension de fichier invalide - le package doit avoir une extension ".zip".</value>
  </data>
  <data name="InvalidManifestExtension.Text">
    <value>Extension de fichier invalide - le manifeste doit avoir une extension ".dnn".</value>
  </data>
  <data name="Success.Text">
    <value>Le package a été créé et peut être trouvé dans le dossier {0}</value>
  </data>
  <!--Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the "Software"), to deal in the Software without restriction, including without limitation 
the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and 
to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 
The copyright notice on top of this file, and this permission notice shall be included in all copies or substantial portions 
of the Software.
 
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED 
TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
DEALINGS IN THE SOFTWARE.
-->
</root>